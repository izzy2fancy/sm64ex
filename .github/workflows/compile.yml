name: Compile

on:
  push:
    branches: [ "appimage" ]

jobs:
  windows:
    name: Windows (MSYS2)

    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:
    - uses: actions/checkout@v3
    - uses: msys2/setup-msys2@v2
    - name: Fetch Dependencies
      run: pacman -S --noconfirm unzip make git mingw-w64-i686-gcc mingw-w64-x86_64-gcc mingw-w64-i686-glew mingw-w64-x86_64-glew mingw-w64-i686-SDL2 mingw-w64-i686-SDL mingw-w64-x86_64-SDL2 mingw-w64-x86_64-SDL python3
    - name: Build
      run: |
        make
        cd build/us_pc
        rm -rf textures text src sound lib levels include data bin assets actors res
        rm -f level_rules.mk
        cd ../../
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: sm64ex-${{ github.run_number }}-${{ github.job }}
        path: D:\a\sm64ex\sm64ex\build\us_pc\

  linux:
    name: Linux

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Fetch Dependencies
      run: sudo apt install -y build-essential git python3 libglew-dev libsdl2-dev
    - name: Build
      run: |
        make
        cd build/us_pc
        rm -rf textures text src sound lib levels include data bin assets actors res
        rm -f level_rules.mk
        cd ../../
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: sm64ex-${{ github.run_number }}-${{ github.job }}
        path: /home/runner/work/sm64ex/sm64ex/build/us_pc

  linux-appimage:
    name: Linux (AppImage) (glibc 2.28) (x86_64)
    runs-on: ubuntu-latest
    container: docker
    steps:
    - uses: actions/checkout@v3
    - name: Build sm64ex AppImage builder image
      run: |
        cd platform/appimage/
        docker build . -t sm64ex-appimage-builder
    - name: Build sm64ex in builder image
      run: docker run -v ${PWD}:/sm64ex sm64ex-appimage-builder make -j$(nproc) FILE_PICKER=1 BETTERCAMERA=1
    - name: Install sm64ex to AppDir
      run: |
        cd build/us_pc
        rm -rf textures text src sound lib levels include data bin assets actors res
        rm -f level_rules.mk
        cd ../../
        mkdir -p AppDir/usr/bin/
        mv build/us_pc/sm64.us.f3dex2e AppDir/usr/bin/
        mkdir -p AppDir/custom_assets/
        cp -r build/us_pc/* AppDir/custom_assets/
    - name: Build sm64ex AppImage in builder image
      run: |
        touch dummy.svg
        docker run -v ${PWD}:/sm64ex sm64ex-appimage-builder squashfs-root/AppRun --icon-file dummy.svg --desktop-file platform/appimage/sm64ex.desktop --appdir AppDir --output appimage NO_STRIP=true
    - name: Upload Artifact
      uses: actions/upload-artifact@v4.3.1
      with:
        name: sm64ex-${{ github.run_number }}-${{ github.job }}
        path: 'sm64ex-x86_64.AppImage'
